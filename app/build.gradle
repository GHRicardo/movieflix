plugins {
    id 'com.android.application'
    id 'kotlin-android'
    id 'kotlin-kapt'
}

android {
    compileSdk 31

    def apikeyPropertiesFile = rootProject.file("apikey.properties")
    def apikeyProperties = new Properties()
    apikeyProperties.load(new FileInputStream(apikeyPropertiesFile))

    defaultConfig {
        applicationId "com.example.movieflix"
        minSdk 21
        targetSdk 31
        versionCode 1
        versionName "1.0"

        buildConfigField("String","API_KEY",apikeyProperties['TMDB_APIKEY'])
        buildConfigField("String","BASE_URL",apikeyProperties['TMDB_BASE_URL'])

        testInstrumentationRunner "com.example.movieflix.presentation.MovieFlixTestRunner"
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    kotlinOptions {
        jvmTarget = '1.8'
    }

    buildFeatures{
        viewBinding true
    }

    packagingOptions {
        exclude 'META-INF/AL2.0'
        exclude 'META-INF/LGPL2.1'
    }
}

dependencies {

    implementation 'androidx.core:core-ktx:1.7.0'
    implementation 'androidx.appcompat:appcompat:1.4.0'
    implementation 'com.google.android.material:material:1.4.0'
    implementation 'androidx.constraintlayout:constraintlayout:2.1.2'

    def lifecycle_version = "2.4.0"
    def room_version = "2.3.0"
    def coroutines_version = "1.5.1"
    def dagger_version = "2.40.2"
    def retrofit_version = "2.9.0"
    def interceptor_version = "4.9.3"
    def glide_version = "4.12.0"
    def nav_version = "2.3.5"

    // ViewModel
    implementation "androidx.lifecycle:lifecycle-viewmodel-ktx:$lifecycle_version"
    // LiveData
    implementation "androidx.lifecycle:lifecycle-livedata-ktx:$lifecycle_version"
    // Saved state module for ViewModel
    implementation "androidx.lifecycle:lifecycle-viewmodel-savedstate:$lifecycle_version"

    // Annotation processor
    kapt "androidx.lifecycle:lifecycle-compiler:$lifecycle_version"

    //room
    implementation "androidx.room:room-runtime:$room_version"
    kapt "androidx.room:room-compiler:$room_version"

    // optional - Kotlin Extensions and Coroutines support for Room
    implementation "androidx.room:room-ktx:$room_version"

    //coroutines
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-android:$coroutines_version"

    //dagger
    implementation "com.google.dagger:dagger:$dagger_version"
    kapt "com.google.dagger:dagger-compiler:$dagger_version"

    //retrofit
    implementation "com.squareup.retrofit2:retrofit:$retrofit_version"
    implementation "com.squareup.retrofit2:converter-gson:$retrofit_version"
    implementation "com.squareup.okhttp3:logging-interceptor:$interceptor_version"

    //glide
    implementation "com.github.bumptech.glide:glide:$glide_version"
    kapt "com.github.bumptech.glide:compiler:$glide_version"

    //navigation
    implementation "androidx.navigation:navigation-fragment-ktx:$nav_version"
    implementation "androidx.navigation:navigation-ui-ktx:$nav_version"

    //otroyoutube player
    implementation 'com.pierfrancescosoffritti.androidyoutubeplayer:core:10.0.5'

    testImplementation 'junit:junit:4.+'
    androidTestImplementation 'androidx.test.ext:junit:1.1.3'
    //androidTestImplementation 'androidx.test.espresso:espresso-core:3.4.0'
    androidTestImplementation('androidx.test.espresso:espresso-contrib:3.4.0'){
        exclude group: 'org.checkerframework', module: 'checker'
    }

    def androidx_test_version = "1.4.0"
    def core_testing_version = "2.1.0"
    def truth_version = "1.1.3"
    def coroutines_test_version = "1.5.0"

    testImplementation "androidx.arch.core:core-testing:$core_testing_version"
    testImplementation "org.jetbrains.kotlinx:kotlinx-coroutines-test:$coroutines_test_version"
    testImplementation "com.google.truth:truth:$truth_version"

    androidTestImplementation "androidx.test:runner:$androidx_test_version"
    androidTestImplementation "androidx.test:core-ktx:$androidx_test_version"
    androidTestImplementation "androidx.arch.core:core-testing:$core_testing_version"
    androidTestImplementation "org.jetbrains.kotlinx:kotlinx-coroutines-test:$coroutines_test_version"
    androidTestImplementation "com.google.truth:truth:$truth_version"

    kaptAndroidTest "com.google.dagger:dagger-compiler:$dagger_version"
}